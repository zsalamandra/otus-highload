server:
  port: 8085

logging:
  level:
    org.springframework.jdbc.core.JdbcTemplate: INFO
    org.springframework.jdbc.core.StatementCreatorUtils: INFO
    org.springframework.jdbc.datasource: INFO
    org.springframework.transaction.interceptor: INFO
    com.zaxxer.hikari: INFO

spring:
  datasource:
    master:
      jdbc-url: jdbc:postgresql://z-social-network-hw4-postgres-master:5432/z-social-network
      url: jdbc:postgresql://z-social-network-hw4-postgres-master:5432/z-social-network
      username: root
      password: root
      driver-class-name: org.postgresql.Driver
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: feed-group
      auto-offset-reset: earliest
  # Конфигурация Redis
  data:
    redis:
      host: redis
      port: 6379
      timeout: 2000

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus
  prometheus:
    metrics:
      export:
        enabled: true

