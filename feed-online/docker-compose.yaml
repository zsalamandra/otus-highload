version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    container_name: z-social-network-postgres
    image: postgres:14
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: z-social-network
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - social-network

  # Zookeeper для Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: z-social-network-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - social-network

  # Kafka для очередей сообщений
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: z-social-network-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - social-network

  # Redis для кеширования и хранения WebSocket сессий
  redis:
    image: redis:alpine
    container_name: z-social-network-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - social-network

  # Redis Commander - UI для мониторинга Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: z-social-network-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=secret
    ports:
      - "8081:8081"
    networks:
      - social-network
    depends_on:
      - redis

  # Сервис социальной сети (первый экземпляр)
  z-social-network-hw6-app-1:
    container_name: z-social-network-app-1
    image: zsalamandra/z-social-network-hw6
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    environment:
      - JAVA_OPTS="-Xmx1024m -Xms512m"
      - SPRING_DATASOURCE_MASTER_URL=jdbc:postgresql://postgres:5432/z-social-network
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_PROFILES_ACTIVE=docker
      - INSTANCE_ID=app-1
      - INITIALIZER_NODE=app-1
    networks:
      - social-network
    depends_on:
      - postgres
      - kafka
      - redis

  # Сервис социальной сети (второй экземпляр для масштабирования)
  z-social-network-hw6-app-2:
    container_name: z-social-network-app-2
    image: zsalamandra/z-social-network-hw6
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8086:8085"
    environment:
      - JAVA_OPTS="-Xmx1024m -Xms512m"
      - SPRING_DATASOURCE_MASTER_URL=jdbc:postgresql://postgres:5432/z-social-network
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_PROFILES_ACTIVE=docker
      - INSTANCE_ID=app-2
      - INITIALIZER_NODE=app-1
    networks:
      - social-network
    depends_on:
      - postgres
      - kafka
      - redis

  # NGINX для балансировки нагрузки между экземплярами
  nginx:
    image: nginx:latest
    container_name: z-social-network-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - social-network
    depends_on:
      - z-social-network-hw6-app-1
      - z-social-network-hw6-app-2

networks:
  social-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data: